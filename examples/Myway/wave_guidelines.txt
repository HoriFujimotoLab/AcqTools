%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% WAVE ACQUISITION GUIDELINES:
% ----------------------------
% system: myway PEexpert-3
% author: Thomas Beauduin, University of Tokyo, 2015
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% DEFINITIONS:
Fs,fpga: sampling of FPGA func watch_data_8ch()
Fs,wave: sampling of acquisition defined in wave interface
Fs,data: sampling of reference signal and controllers
Conventionally: Fs,fpga = Fs,wave = Fs,data
unfortunately this creates important data loss / distortions

% SAMPLING CHOICES:
Fs,wave = 2*Fs,data: this reduces synchronisation errors 
					 and is neccessary for correction
		OR
Fs,wave = Fs,data: 	correction not exact, interpolation neccessary 
					less optimal; extra interpolation error induced
					
Fs,fpga = n*Fs,wave: this reduces fluctuation errors and reduces trig. errors 
					(ref and acquisition not simultanious, FRF errors)
		OR
Fs,fpga = Fs,wave/2: in physical constained case (ex. current control)
					 less optimal; reduces fluctuation compared to Fs,f=Fs,w
					 but still errors and triggering problems
		NOT
Fs,fpga = Fs,wave: 	high quantity of synchronisation error
					high-resolution freq experiments not guaranteed

% TRIGGER CHOICES:
- define a counter MSR for triggering and correction
- increment msr with every new excitation point / reference point
case 1 (best): Fs,fpga = n*Fs,wave (in current loop, not position)
		-> trigger level wave = 0 and run automatically msr2mat(fs) in matlab
case 2 (ok): Fs,fpga = Fs,data = Fs,wave/2 (physical contained)
		-> trigger level wave = 1 and manual correction in CSV-file 
		   of first few samples of MSR to be (1,2,3,...) before matlab run
